CREATE OR REPLACE FUNCTION F_Importa_Controlli(
   AREA_IN         IN   VARCHAR2,
   AREA_OUT        IN   VARCHAR2,
   CONTROLLO_OUT   IN   VARCHAR2,
   TIPO_INS        IN   VARCHAR2,
   SOTTO_AREE      IN   VARCHAR2,
   UTENTE_AGG      IN   VARCHAR2)
RETURN NUMBER
IS
   CURSOR C_CONTROLLI_TUTTI (VAR_AREA_OUT VARCHAR2,VAR_CONTROLLO_OUT VARCHAR2) IS
      SELECT CONTROLLO,TIPO,DRIVER,CONNESSIONE,UTENTE,PASSWD,DSN,CORPO,MSG_ERRORE,CAMPI, SBLOCCO_AUTOMATICO
      FROM LIBRERIA_CONTROLLI
      WHERE AREA = VAR_AREA_OUT AND (CONTROLLO LIKE '%'||VAR_CONTROLLO_OUT||'%' OR VAR_CONTROLLO_OUT IS NULL);
   R_CT  C_CONTROLLI_TUTTI%ROWTYPE;
   CURSOR C_CONTROLLI_SEL (VAR_AREA_OUT VARCHAR2,VAR_CONTROLLO_OUT VARCHAR2) IS
      SELECT CONTROLLO,TIPO,DRIVER,CONNESSIONE,UTENTE,PASSWD,DSN,CORPO,MSG_ERRORE,CAMPI,SBLOCCO_AUTOMATICO
      FROM LIBRERIA_CONTROLLI
      WHERE AREA = VAR_AREA_OUT AND CONTROLLO = VAR_CONTROLLO_OUT;
   R_CS  C_CONTROLLI_SEL%ROWTYPE;
   CURSOR C_AREE (VAR_AREA VARCHAR2,VAR_AREA_ST VARCHAR2) IS
      SELECT AREA
      FROM AREE
      WHERE AREA LIKE VAR_AREA
      UNION
      SELECT AREA
      FROM AREE
      WHERE AREA LIKE VAR_AREA_ST;
   R_AR  C_AREE%ROWTYPE;
   NUM_CONTROLLI    NUMBER;
   NUM_AREE         NUMBER;
   NESIST           NUMBER;
   CINSTR           CLOB;
   RESULT           NUMBER(1) := 0;
BEGIN
   IF ((AREA_IN != AREA_OUT) OR (SOTTO_AREE = 'S')) THEN
      IF (SOTTO_AREE = 'S') THEN
       OPEN C_AREE(AREA_IN,AREA_IN||'.%');
      ELSE
       OPEN C_AREE(AREA_IN,AREA_IN);
      END IF;
      NUM_AREE:=0;
      LOOP
        BEGIN
         FETCH C_AREE INTO R_AR;
         EXIT WHEN C_AREE%NOTFOUND;
        END;
        NUM_AREE:=NUM_AREE + 1;
      IF (TIPO_INS = 'T') THEN
         NUM_CONTROLLI:=0;
         OPEN C_CONTROLLI_TUTTI(AREA_OUT,CONTROLLO_OUT);
         LOOP
             FETCH C_CONTROLLI_TUTTI INTO R_CT;
             EXIT WHEN C_CONTROLLI_TUTTI%NOTFOUND;
             NUM_CONTROLLI:= NUM_CONTROLLI + 1;
            BEGIN
               SELECT COUNT(1)
               INTO NESIST
               FROM LIBRERIA_CONTROLLI
               WHERE AREA = R_AR.AREA AND CONTROLLO = R_CT.CONTROLLO;
               EXCEPTION WHEN OTHERS THEN
                 raise_application_error (-20999,'RICERCA CONTROLLI DA IMPORTARE (AREA,CONTROLLO): ('||R_AR.AREA||','||R_CT.CONTROLLO||') '||SQLERRM);
            END;
            IF (NESIST > 0) THEN
              BEGIN
                   UPDATE LIBRERIA_CONTROLLI SET
                     DRIVER = R_CT.DRIVER,
                     CONNESSIONE = R_CT.CONNESSIONE,
                     UTENTE = R_CT.UTENTE,
                     PASSWD = R_CT.PASSWD,
                     DSN = R_CT.DSN,
                     TIPO = R_CT.TIPO,
                     CORPO = R_CT.CORPO,
                     MSG_ERRORE = R_CT.MSG_ERRORE,
                     CAMPI = R_CT.CAMPI,
                     SBLOCCO_AUTOMATICO = R_CT.SBLOCCO_AUTOMATICO,
                     DATA_AGGIORNAMENTO = SYSDATE,
                     UTENTE_AGGIORNAMENTO = UTENTE_AGG
                   WHERE AREA = R_AR.AREA AND CONTROLLO = R_CT.CONTROLLO;
                   EXCEPTION WHEN OTHERS THEN
                     raise_application_error (-20998,'IMPOSSIBILE AGGIORNARE IL CONTROLLO (AREA,CONTROLLO):('||R_AR.AREA||','||R_CT.CONTROLLO||') '||SQLERRM);
               END;
            ELSE
              BEGIN
                 INSERT INTO LIBRERIA_CONTROLLI(AREA,CONTROLLO,DRIVER,CONNESSIONE,UTENTE,PASSWD,DSN,TIPO,CORPO,MSG_ERRORE,
                    CAMPI,SBLOCCO_AUTOMATICO,DATA_AGGIORNAMENTO, UTENTE_AGGIORNAMENTO)
                 VALUES
                   (R_AR.AREA, R_CT.CONTROLLO, R_CT.DRIVER, R_CT.CONNESSIONE, R_CT.UTENTE, R_CT.PASSWD, R_CT.DSN,
                    R_CT.TIPO, R_CT.CORPO, R_CT.MSG_ERRORE, R_CT.CAMPI, R_CT.SBLOCCO_AUTOMATICO, SYSDATE, UTENTE_AGG);
                 EXCEPTION WHEN OTHERS THEN
                     raise_application_error (-20997,'IMPOSSIBILE INSERIRE IL CONTROLLO (AREA,CONTROLLO):('||R_AR.AREA||','||R_CT.CONTROLLO||') '||SQLERRM);
                END;
            END IF;
         END LOOP;
         CLOSE C_CONTROLLI_TUTTI;
      ELSE
         NUM_CONTROLLI:=0;
         OPEN C_CONTROLLI_SEL(AREA_OUT,CONTROLLO_OUT);
        LOOP
          FETCH C_CONTROLLI_SEL INTO R_CS;
          EXIT WHEN C_CONTROLLI_SEL%NOTFOUND;
          NUM_CONTROLLI:= NUM_CONTROLLI + 1;
          BEGIN
               SELECT COUNT(1)
               INTO NESIST
               FROM LIBRERIA_CONTROLLI
               WHERE AREA = R_AR.AREA AND CONTROLLO = R_CS.CONTROLLO;
               EXCEPTION WHEN OTHERS THEN
                 raise_application_error (-20996,'RICERCA CONTROLLI DA IMPORTARE (AREA,CONTROLLO): ('||R_AR.AREA||','||R_CS.CONTROLLO||') '||SQLERRM);
          END;
          IF (NESIST > 0) THEN
            BEGIN
              UPDATE LIBRERIA_CONTROLLI SET
                  DRIVER = R_CS.DRIVER,
                  CONNESSIONE = R_CS.CONNESSIONE,
                  UTENTE = R_CS.UTENTE,
                  PASSWD = R_CS.PASSWD,
                  DSN = R_CS.DSN,
                  TIPO = R_CS.TIPO, CORPO =
                  R_CS.CORPO, MSG_ERRORE =
                  R_CS.MSG_ERRORE,
                  CAMPI = R_CS.CAMPI,
                  SBLOCCO_AUTOMATICO = R_CS.SBLOCCO_AUTOMATICO,
                  DATA_AGGIORNAMENTO = SYSDATE,
                  UTENTE_AGGIORNAMENTO = UTENTE_AGG
              WHERE AREA = R_AR.AREA AND CONTROLLO = R_CS.CONTROLLO;
              EXCEPTION WHEN OTHERS THEN
              raise_application_error (-20995,'IMPOSSIBILE AGGIORNARE IL CONTROLLO (AREA,CONTROLLO):('||R_AR.AREA||','||R_CS.CONTROLLO||') '||SQLERRM);
            END;
         ELSE
            BEGIN
              INSERT INTO LIBRERIA_CONTROLLI(AREA, CONTROLLO, DRIVER, CONNESSIONE, UTENTE, PASSWD, DSN, TIPO, CORPO, MSG_ERRORE,
                    CAMPI, SBLOCCO_AUTOMATICO, DATA_AGGIORNAMENTO, UTENTE_AGGIORNAMENTO)
              VALUES
                    (R_AR.AREA, R_CS.CONTROLLO, R_CS.DRIVER, R_CS.CONNESSIONE, R_CS.UTENTE, R_CS.PASSWD, R_CS.DSN,
                     R_CS.TIPO, R_CS.CORPO, R_CS.MSG_ERRORE, R_CS.CAMPI, R_CS.SBLOCCO_AUTOMATICO, SYSDATE, UTENTE_AGG);
              EXCEPTION WHEN OTHERS THEN
                     raise_application_error (-20994,'IMPOSSIBILE INSERIRE IL CONTROLLO (AREA,CONTROLLO):('||R_AR.AREA||','||R_CS.CONTROLLO||') '||SQLERRM);
            END;
         END IF;
         END LOOP;
         CLOSE C_CONTROLLI_SEL;
      END IF;
     END LOOP;
     CLOSE C_AREE;
      BEGIN
        IF NUM_AREE = 0 THEN
         raise_application_error (-20992,'AREA INESISTENTE'||SQLERRM);
        END IF;
      END;
      BEGIN
        IF NUM_CONTROLLI = 0 THEN
         raise_application_error (-20991,'CONTROLLI SELEZIONATI INESISTENTI (AREA,CONTROLLO): ('||AREA_OUT||','||CONTROLLO_OUT||') '||SQLERRM);
        END IF;
      END;
      RESULT:=1;
      COMMIT;
   END IF;
   RETURN RESULT;
EXCEPTION WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
      RETURN NULL;
END;
/

